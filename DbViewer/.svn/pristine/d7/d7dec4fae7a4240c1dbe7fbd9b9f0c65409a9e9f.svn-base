<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_66) on Tue Jan 10 22:04:10 CET 2017 -->
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>SchemaTab</title>
<meta name="date" content="2017-01-10">
<link rel="stylesheet" type="text/css" href="../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="SchemaTab";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/SchemaTab.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../gui/panel/ClosableTabComponent.html" title="class in gui.panel"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?gui/panel/SchemaTab.html" target="_top">Frames</a></li>
<li><a href="SchemaTab.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.classes.inherited.from.class.javax.swing.JPanel">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">gui.panel</div>
<h2 title="Class SchemaTab" class="title">Class SchemaTab</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>java.awt.Component</li>
<li>
<ul class="inheritance">
<li>java.awt.Container</li>
<li>
<ul class="inheritance">
<li>javax.swing.JComponent</li>
<li>
<ul class="inheritance">
<li>javax.swing.JPanel</li>
<li>
<ul class="inheritance">
<li>gui.panel.SchemaTab</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.awt.image.ImageObserver, java.awt.MenuContainer, java.io.Serializable, javax.accessibility.Accessible</dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">SchemaTab</span>
extends javax.swing.JPanel</pre>
<div class="block">SchemaTab represents the content of the tab inside the main working area. It consists of toolbar, table and incorporates
 potential tabbed pane representing children tabs. Behavior of component is set through the constructor.</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Viktor, Nikola</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../serialized-form.html#gui.panel.SchemaTab">Serialized Form</a></dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<ul class="blockList">
<li class="blockList"><a name="nested.classes.inherited.from.class.javax.swing.JPanel">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from class&nbsp;javax.swing.JPanel</h3>
<code>javax.swing.JPanel.AccessibleJPanel</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="nested.classes.inherited.from.class.javax.swing.JComponent">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from class&nbsp;javax.swing.JComponent</h3>
<code>javax.swing.JComponent.AccessibleJComponent</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="nested.classes.inherited.from.class.java.awt.Container">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from class&nbsp;java.awt.Container</h3>
<code>java.awt.Container.AccessibleAWTContainer</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="nested.classes.inherited.from.class.java.awt.Component">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from class&nbsp;java.awt.Component</h3>
<code>java.awt.Component.AccessibleAWTComponent, java.awt.Component.BaselineResizeBehavior, java.awt.Component.BltBufferStrategy, java.awt.Component.FlipBufferStrategy</code></li>
</ul>
</li>
</ul>
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel">SchemaTabbedPane</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#children">children</a></span></code>
<div class="block"><a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel"><code>SchemaTabbedPane</code></a> reference.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private javax.swing.JTable</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#content">content</a></span></code>
<div class="block"><code>JTable</code> reference.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#hasChildren">hasChildren</a></span></code>
<div class="block"><a href="../../model/Table.html" title="class in model"><code>Table</code></a> has children?</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#lastSelectedRow">lastSelectedRow</a></span></code>
<div class="block">Currently selected row.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private javax.swing.JScrollPane</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#scrollPane">scrollPane</a></span></code>
<div class="block"><code>JScrollPane</code> reference.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private javax.swing.JSplitPane</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#splitPane">splitPane</a></span></code>
<div class="block"><code>JSplitPane</code> reference.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../../model/Table.html" title="class in model">Table</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#table">table</a></span></code>
<div class="block"><a href="../../model/Table.html" title="class in model"><code>Table</code></a> reference.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../../gui/toolbars/TableToolbar.html" title="class in gui.toolbars">TableToolbar</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#toolbar">toolbar</a></span></code>
<div class="block"><a href="../../gui/toolbars/TableToolbar.html" title="class in gui.toolbars"><code>TableToolbar</code></a> reference.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="fields.inherited.from.class.javax.swing.JComponent">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;javax.swing.JComponent</h3>
<code>listenerList, TOOL_TIP_TEXT_KEY, ui, UNDEFINED_CONDITION, WHEN_ANCESTOR_OF_FOCUSED_COMPONENT, WHEN_FOCUSED, WHEN_IN_FOCUSED_WINDOW</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="fields.inherited.from.class.java.awt.Component">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;java.awt.Component</h3>
<code>accessibleContext, BOTTOM_ALIGNMENT, CENTER_ALIGNMENT, LEFT_ALIGNMENT, RIGHT_ALIGNMENT, TOP_ALIGNMENT</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="fields.inherited.from.class.java.awt.image.ImageObserver">
<!--   -->
</a>
<h3>Fields inherited from interface&nbsp;java.awt.image.ImageObserver</h3>
<code>ABORT, ALLBITS, ERROR, FRAMEBITS, HEIGHT, PROPERTIES, SOMEBITS, WIDTH</code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#SchemaTab-model.Table-boolean-">SchemaTab</a></span>(<a href="../../model/Table.html" title="class in model">Table</a>&nbsp;table,
         boolean&nbsp;generateChildren)</code>
<div class="block">Constructor for <a href="../../gui/panel/SchemaTab.html" title="class in gui.panel"><code>SchemaTab</code></a> parametrization.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#changeLanguage-java.util.ResourceBundle-">changeLanguage</a></span>(java.util.ResourceBundle&nbsp;rb)</code>
<div class="block">Method for changing the language of components contained inside the <a href="../../gui/panel/SchemaTab.html" title="class in gui.panel"><code>SchemaTab</code></a>.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#clearData-javax.swing.table.DefaultTableModel-">clearData</a></span>(javax.swing.table.DefaultTableModel&nbsp;dm)</code>
<div class="block">Method for clearing all the data from Table.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#generateChildrenValues--">generateChildrenValues</a></span>()</code>
<div class="block">Method for generating children values (values which have references (Foreign Key) on the selected row in parent's <a href="../../gui/panel/SchemaTab.html" title="class in gui.panel"><code>SchemaTab</code></a>)</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code><a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel">SchemaTabbedPane</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#getChildren--">getChildren</a></span>()</code>
<div class="block">Returns <a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel"><code>SchemaTabbedPane</code></a> object.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#getCode--">getCode</a></span>()</code>
<div class="block">Returns <a href="../../model/Table.html" title="class in model"><code>Table</code></a> code.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>javax.swing.JTable</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#getContent--">getContent</a></span>()</code>
<div class="block">Returns <code>JTable</code> object.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#getLastSelectedRow--">getLastSelectedRow</a></span>()</code>
<div class="block">Getter for selected row in <code>JTable</code></div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#getName--">getName</a></span>()</code>
<div class="block">Returns <a href="../../model/Table.html" title="class in model"><code>Table</code></a> name.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>java.util.HashMap&lt;java.lang.String,java.lang.Object&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#getSelectedRowPrimaryKeys--">getSelectedRowPrimaryKeys</a></span>()</code>
<div class="block">Returns a map with selected row Primary Key values (code is the <a href="../../model/Column.html" title="class in model"><code>Column</code></a> code, 
 value is an <code>Object</code> representing the actual value.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>java.util.HashMap&lt;java.lang.String,java.lang.Object&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#getSelectedRowValues--">getSelectedRowValues</a></span>()</code>
<div class="block">Returns a map with selected row values (code is the <a href="../../model/Column.html" title="class in model"><code>Column</code></a> code, 
 value is an <code>Object</code> representing the actual value.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="../../model/Table.html" title="class in model">Table</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#getTable--">getTable</a></span>()</code>
<div class="block">Returns <a href="../../model/Table.html" title="class in model"><code>Table</code></a> object.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#hasChilderen--">hasChilderen</a></span>()</code>
<div class="block">Returns bool value for having or not having children for current table.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#init-model.Table-boolean-">init</a></span>(<a href="../../model/Table.html" title="class in model">Table</a>&nbsp;table,
    boolean&nbsp;generateChildren)</code>
<div class="block">Initialization of <a href="../../gui/panel/SchemaTab.html" title="class in gui.panel"><code>SchemaTab</code></a></div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#refreshTable--">refreshTable</a></span>()</code>
<div class="block">Method which creates (if doesn't exist) / refreshes(if exists) <code>DefaultTableModel</code> to/from {@link JTable)</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#setChildren-gui.panel.SchemaTabbedPane-">setChildren</a></span>(<a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel">SchemaTabbedPane</a>&nbsp;children)</code>
<div class="block">Sets <a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel"><code>SchemaTabbedPane</code></a> object.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#setLastSelectedRow-int-">setLastSelectedRow</a></span>(int&nbsp;lastSelectedRow)</code>
<div class="block">Setter for selected row in <code>JTable</code></div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#setTable-model.Table-">setTable</a></span>(<a href="../../model/Table.html" title="class in model">Table</a>&nbsp;table)</code>
<div class="block">Sets <a href="../../model/Table.html" title="class in model"><code>Table</code></a> object.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../gui/panel/SchemaTab.html#setTableColumnWidth--">setTableColumnWidth</a></span>()</code>
<div class="block">Proposed method for setting the column width.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.javax.swing.JPanel">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;javax.swing.JPanel</h3>
<code>getAccessibleContext, getUI, getUIClassID, paramString, setUI, updateUI</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.javax.swing.JComponent">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;javax.swing.JComponent</h3>
<code>addAncestorListener, addNotify, addVetoableChangeListener, computeVisibleRect, contains, createToolTip, disable, enable, firePropertyChange, firePropertyChange, firePropertyChange, fireVetoableChange, getActionForKeyStroke, getActionMap, getAlignmentX, getAlignmentY, getAncestorListeners, getAutoscrolls, getBaseline, getBaselineResizeBehavior, getBorder, getBounds, getClientProperty, getComponentGraphics, getComponentPopupMenu, getConditionForKeyStroke, getDebugGraphicsOptions, getDefaultLocale, getFontMetrics, getGraphics, getHeight, getInheritsPopupMenu, getInputMap, getInputMap, getInputVerifier, getInsets, getInsets, getListeners, getLocation, getMaximumSize, getMinimumSize, getNextFocusableComponent, getPopupLocation, getPreferredSize, getRegisteredKeyStrokes, getRootPane, getSize, getToolTipLocation, getToolTipText, getToolTipText, getTopLevelAncestor, getTransferHandler, getVerifyInputWhenFocusTarget, getVetoableChangeListeners, getVisibleRect, getWidth, getX, getY, grabFocus, hide, isDoubleBuffered, isLightweightComponent, isManagingFocus, isOpaque, isOptimizedDrawingEnabled, isPaintingForPrint, isPaintingOrigin, isPaintingTile, isRequestFocusEnabled, isValidateRoot, paint, paintBorder, paintChildren, paintComponent, paintImmediately, paintImmediately, print, printAll, printBorder, printChildren, printComponent, processComponentKeyEvent, processKeyBinding, processKeyEvent, processMouseEvent, processMouseMotionEvent, putClientProperty, registerKeyboardAction, registerKeyboardAction, removeAncestorListener, removeNotify, removeVetoableChangeListener, repaint, repaint, requestDefaultFocus, requestFocus, requestFocus, requestFocusInWindow, requestFocusInWindow, resetKeyboardActions, reshape, revalidate, scrollRectToVisible, setActionMap, setAlignmentX, setAlignmentY, setAutoscrolls, setBackground, setBorder, setComponentPopupMenu, setDebugGraphicsOptions, setDefaultLocale, setDoubleBuffered, setEnabled, setFocusTraversalKeys, setFont, setForeground, setInheritsPopupMenu, setInputMap, setInputVerifier, setMaximumSize, setMinimumSize, setNextFocusableComponent, setOpaque, setPreferredSize, setRequestFocusEnabled, setToolTipText, setTransferHandler, setUI, setVerifyInputWhenFocusTarget, setVisible, unregisterKeyboardAction, update</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.awt.Container">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.awt.Container</h3>
<code>add, add, add, add, add, addContainerListener, addImpl, addPropertyChangeListener, addPropertyChangeListener, applyComponentOrientation, areFocusTraversalKeysSet, countComponents, deliverEvent, doLayout, findComponentAt, findComponentAt, getComponent, getComponentAt, getComponentAt, getComponentCount, getComponents, getComponentZOrder, getContainerListeners, getFocusTraversalKeys, getFocusTraversalPolicy, getLayout, getMousePosition, insets, invalidate, isAncestorOf, isFocusCycleRoot, isFocusCycleRoot, isFocusTraversalPolicyProvider, isFocusTraversalPolicySet, layout, list, list, locate, minimumSize, paintComponents, preferredSize, printComponents, processContainerEvent, processEvent, remove, remove, removeAll, removeContainerListener, setComponentZOrder, setFocusCycleRoot, setFocusTraversalPolicy, setFocusTraversalPolicyProvider, setLayout, transferFocusDownCycle, validate, validateTree</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.awt.Component">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.awt.Component</h3>
<code>action, add, addComponentListener, addFocusListener, addHierarchyBoundsListener, addHierarchyListener, addInputMethodListener, addKeyListener, addMouseListener, addMouseMotionListener, addMouseWheelListener, bounds, checkImage, checkImage, coalesceEvents, contains, createImage, createImage, createVolatileImage, createVolatileImage, disableEvents, dispatchEvent, enable, enableEvents, enableInputMethods, firePropertyChange, firePropertyChange, firePropertyChange, firePropertyChange, firePropertyChange, firePropertyChange, getBackground, getBounds, getColorModel, getComponentListeners, getComponentOrientation, getCursor, getDropTarget, getFocusCycleRootAncestor, getFocusListeners, getFocusTraversalKeysEnabled, getFont, getForeground, getGraphicsConfiguration, getHierarchyBoundsListeners, getHierarchyListeners, getIgnoreRepaint, getInputContext, getInputMethodListeners, getInputMethodRequests, getKeyListeners, getLocale, getLocation, getLocationOnScreen, getMouseListeners, getMouseMotionListeners, getMousePosition, getMouseWheelListeners, getParent, getPeer, getPropertyChangeListeners, getPropertyChangeListeners, getSize, getToolkit, getTreeLock, gotFocus, handleEvent, hasFocus, imageUpdate, inside, isBackgroundSet, isCursorSet, isDisplayable, isEnabled, isFocusable, isFocusOwner, isFocusTraversable, isFontSet, isForegroundSet, isLightweight, isMaximumSizeSet, isMinimumSizeSet, isPreferredSizeSet, isShowing, isValid, isVisible, keyDown, keyUp, list, list, list, location, lostFocus, mouseDown, mouseDrag, mouseEnter, mouseExit, mouseMove, mouseUp, move, nextFocus, paintAll, postEvent, prepareImage, prepareImage, processComponentEvent, processFocusEvent, processHierarchyBoundsEvent, processHierarchyEvent, processInputMethodEvent, processMouseWheelEvent, remove, removeComponentListener, removeFocusListener, removeHierarchyBoundsListener, removeHierarchyListener, removeInputMethodListener, removeKeyListener, removeMouseListener, removeMouseMotionListener, removeMouseWheelListener, removePropertyChangeListener, removePropertyChangeListener, repaint, repaint, repaint, resize, resize, setBounds, setBounds, setComponentOrientation, setCursor, setDropTarget, setFocusable, setFocusTraversalKeysEnabled, setIgnoreRepaint, setLocale, setLocation, setLocation, setName, setSize, setSize, show, show, size, toString, transferFocus, transferFocusBackward, transferFocusUpCycle</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="table">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>table</h4>
<pre>private&nbsp;<a href="../../model/Table.html" title="class in model">Table</a> table</pre>
<div class="block"><a href="../../model/Table.html" title="class in model"><code>Table</code></a> reference. Model for <a href="../../gui/panel/SchemaTab.html" title="class in gui.panel"><code>SchemaTab</code></a></div>
</li>
</ul>
<a name="content">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>content</h4>
<pre>private&nbsp;javax.swing.JTable content</pre>
<div class="block"><code>JTable</code> reference. Visualisation of data from DB.</div>
</li>
</ul>
<a name="children">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>children</h4>
<pre>private&nbsp;<a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel">SchemaTabbedPane</a> children</pre>
<div class="block"><a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel"><code>SchemaTabbedPane</code></a> reference. Container for children tables.</div>
</li>
</ul>
<a name="scrollPane">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>scrollPane</h4>
<pre>private&nbsp;javax.swing.JScrollPane scrollPane</pre>
<div class="block"><code>JScrollPane</code> reference.</div>
</li>
</ul>
<a name="splitPane">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>splitPane</h4>
<pre>private&nbsp;javax.swing.JSplitPane splitPane</pre>
<div class="block"><code>JSplitPane</code> reference.</div>
</li>
</ul>
<a name="toolbar">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toolbar</h4>
<pre>private&nbsp;<a href="../../gui/toolbars/TableToolbar.html" title="class in gui.toolbars">TableToolbar</a> toolbar</pre>
<div class="block"><a href="../../gui/toolbars/TableToolbar.html" title="class in gui.toolbars"><code>TableToolbar</code></a> reference. Container for actions.</div>
</li>
</ul>
<a name="hasChildren">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasChildren</h4>
<pre>private&nbsp;boolean hasChildren</pre>
<div class="block"><a href="../../model/Table.html" title="class in model"><code>Table</code></a> has children?</div>
</li>
</ul>
<a name="lastSelectedRow">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>lastSelectedRow</h4>
<pre>private&nbsp;int lastSelectedRow</pre>
<div class="block">Currently selected row.</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="SchemaTab-model.Table-boolean-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>SchemaTab</h4>
<pre>public&nbsp;SchemaTab(<a href="../../model/Table.html" title="class in model">Table</a>&nbsp;table,
                 boolean&nbsp;generateChildren)</pre>
<div class="block">Constructor for <a href="../../gui/panel/SchemaTab.html" title="class in gui.panel"><code>SchemaTab</code></a> parametrization.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>table</code> - <a href="../../model/Table.html" title="class in model"><code>Table</code></a> from which the data is reconstructed from</dd>
<dd><code>generateChildren</code> - boolean, <code>true</code> if <a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel"><code>SchemaTabbedPane</code></a> of children should be generated, otherwise <code>false</code></dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="init-model.Table-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>init</h4>
<pre>private&nbsp;void&nbsp;init(<a href="../../model/Table.html" title="class in model">Table</a>&nbsp;table,
                  boolean&nbsp;generateChildren)</pre>
<div class="block">Initialization of <a href="../../gui/panel/SchemaTab.html" title="class in gui.panel"><code>SchemaTab</code></a></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>table</code> - <a href="../../model/Table.html" title="class in model"><code>Table</code></a> from which the data is reconstucted from</dd>
<dd><code>generateChildren</code> - boolean, <code>true</code> if <a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel"><code>SchemaTabbedPane</code></a> of children should be generated, otherwise <code>false</code></dd>
</dl>
</li>
</ul>
<a name="refreshTable--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>refreshTable</h4>
<pre>public&nbsp;void&nbsp;refreshTable()</pre>
<div class="block">Method which creates (if doesn't exist) / refreshes(if exists) <code>DefaultTableModel</code> to/from {@link JTable)</div>
</li>
</ul>
<a name="setTableColumnWidth--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTableColumnWidth</h4>
<pre>public&nbsp;void&nbsp;setTableColumnWidth()</pre>
<div class="block">Proposed method for setting the column width.</div>
</li>
</ul>
<a name="clearData-javax.swing.table.DefaultTableModel-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clearData</h4>
<pre>public&nbsp;void&nbsp;clearData(javax.swing.table.DefaultTableModel&nbsp;dm)</pre>
<div class="block">Method for clearing all the data from Table. Prevents memory leakage and explicitly signals to invoke GC on released objects.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>dm</code> - </dd>
</dl>
</li>
</ul>
<a name="getSelectedRowPrimaryKeys--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSelectedRowPrimaryKeys</h4>
<pre>public&nbsp;java.util.HashMap&lt;java.lang.String,java.lang.Object&gt;&nbsp;getSelectedRowPrimaryKeys()</pre>
<div class="block">Returns a map with selected row Primary Key values (code is the <a href="../../model/Column.html" title="class in model"><code>Column</code></a> code, 
 value is an <code>Object</code> representing the actual value.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>map with selected row Primary Key values</dd>
</dl>
</li>
</ul>
<a name="getSelectedRowValues--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSelectedRowValues</h4>
<pre>public&nbsp;java.util.HashMap&lt;java.lang.String,java.lang.Object&gt;&nbsp;getSelectedRowValues()</pre>
<div class="block">Returns a map with selected row values (code is the <a href="../../model/Column.html" title="class in model"><code>Column</code></a> code, 
 value is an <code>Object</code> representing the actual value.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>map with selected row values</dd>
</dl>
</li>
</ul>
<a name="getCode--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCode</h4>
<pre>public&nbsp;java.lang.String&nbsp;getCode()</pre>
<div class="block">Returns <a href="../../model/Table.html" title="class in model"><code>Table</code></a> code.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="getName--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getName</h4>
<pre>public&nbsp;java.lang.String&nbsp;getName()</pre>
<div class="block">Returns <a href="../../model/Table.html" title="class in model"><code>Table</code></a> name.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>getName</code>&nbsp;in class&nbsp;<code>java.awt.Component</code></dd>
</dl>
</li>
</ul>
<a name="getChildren--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getChildren</h4>
<pre>public&nbsp;<a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel">SchemaTabbedPane</a>&nbsp;getChildren()</pre>
<div class="block">Returns <a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel"><code>SchemaTabbedPane</code></a> object.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>children</dd>
</dl>
</li>
</ul>
<a name="setChildren-gui.panel.SchemaTabbedPane-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setChildren</h4>
<pre>public&nbsp;void&nbsp;setChildren(<a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel">SchemaTabbedPane</a>&nbsp;children)</pre>
<div class="block">Sets <a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel"><code>SchemaTabbedPane</code></a> object.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>children</code> - </dd>
</dl>
</li>
</ul>
<a name="getTable--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTable</h4>
<pre>public&nbsp;<a href="../../model/Table.html" title="class in model">Table</a>&nbsp;getTable()</pre>
<div class="block">Returns <a href="../../model/Table.html" title="class in model"><code>Table</code></a> object.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>table</dd>
</dl>
</li>
</ul>
<a name="setTable-model.Table-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTable</h4>
<pre>public&nbsp;void&nbsp;setTable(<a href="../../model/Table.html" title="class in model">Table</a>&nbsp;table)</pre>
<div class="block">Sets <a href="../../model/Table.html" title="class in model"><code>Table</code></a> object.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>table</code> - </dd>
</dl>
</li>
</ul>
<a name="getContent--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getContent</h4>
<pre>public&nbsp;javax.swing.JTable&nbsp;getContent()</pre>
<div class="block">Returns <code>JTable</code> object.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>content</dd>
</dl>
</li>
</ul>
<a name="hasChilderen--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasChilderen</h4>
<pre>public&nbsp;boolean&nbsp;hasChilderen()</pre>
<div class="block">Returns bool value for having or not having children for current table.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>hasChildren</dd>
</dl>
</li>
</ul>
<a name="generateChildrenValues--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>generateChildrenValues</h4>
<pre>public&nbsp;void&nbsp;generateChildrenValues()</pre>
<div class="block">Method for generating children values (values which have references (Foreign Key) on the selected row in parent's <a href="../../gui/panel/SchemaTab.html" title="class in gui.panel"><code>SchemaTab</code></a>)</div>
</li>
</ul>
<a name="changeLanguage-java.util.ResourceBundle-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>changeLanguage</h4>
<pre>public&nbsp;void&nbsp;changeLanguage(java.util.ResourceBundle&nbsp;rb)</pre>
<div class="block">Method for changing the language of components contained inside the <a href="../../gui/panel/SchemaTab.html" title="class in gui.panel"><code>SchemaTab</code></a>.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>rb</code> - Resource bundle containing all the information for translation</dd>
</dl>
</li>
</ul>
<a name="getLastSelectedRow--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLastSelectedRow</h4>
<pre>public&nbsp;int&nbsp;getLastSelectedRow()</pre>
<div class="block">Getter for selected row in <code>JTable</code></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>selected row</dd>
</dl>
</li>
</ul>
<a name="setLastSelectedRow-int-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>setLastSelectedRow</h4>
<pre>public&nbsp;void&nbsp;setLastSelectedRow(int&nbsp;lastSelectedRow)</pre>
<div class="block">Setter for selected row in <code>JTable</code></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>lastSelectedRow</code> - index of selected row</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/SchemaTab.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../gui/panel/ClosableTabComponent.html" title="class in gui.panel"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../../gui/panel/SchemaTabbedPane.html" title="class in gui.panel"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?gui/panel/SchemaTab.html" target="_top">Frames</a></li>
<li><a href="SchemaTab.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.classes.inherited.from.class.javax.swing.JPanel">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
